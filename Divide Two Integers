// Divide two integers without using multiplication, division and mod operator.
// If it is overflow, return MAX_INT.

typedef long long ll;
    int divide(int dividend, int divisor) {
        if(dividend == 0)   return 0;
        if(divisor == 1)    return dividend;
        if (!divisor || (dividend == INT_MIN && divisor == -1)) return INT_MAX;
        ll quotient = 0;
        ll pos_dividend = abs((ll)dividend);
        ll pos_divisor = abs((ll)divisor);
        //if(pos_dividend < pos_divisor)  return 0; // No use b/c when dividend = -2147483648, it abs val is 0!
        int indicator = ((dividend < 0) ^ (divisor < 0)) ? -1 : 1;
        while(pos_dividend >= pos_divisor){
            ll a = pos_divisor;
            ll m = 1;
            while((a<<1) < pos_dividend){
                a<<=1;
                m<<=1;
            }
            quotient += m;
            pos_dividend -= a;
        }
        return quotient * indicator;
    }
